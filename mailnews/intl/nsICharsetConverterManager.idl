/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

%{C++
#include "mozilla/Encoding.h"

#define NS_CHARSETCONVERTERMANAGER_CONTRACTID "@mozilla.org/charset-converter-manager;1"
%}

[scriptable, uuid(a0550d46-8d9c-47dd-acc7-c083620dff12)]
interface nsICharsetConverterManager : nsISupports
{
    /**
     * A shortcut to calling nsICharsetAlias to do alias resolution
     * @throws if aCharset is an unknown charset.
     */
    ACString getCharsetAlias(in string aCharset);

    /**
     * Get some data about the given charset. This includes whether the
     * character encoding may be used for certain purposes, if it is
     * multi-byte, and the language code for it. See charsetData.properties
     * for the source of this data. Some known property names:
     *    LangGroup      - language code for charset, e.g. 'he' and 'zh-CN'.
     *    isMultibyte    - is this a multi-byte charset?
     *    isInternal     - not to be used in untrusted web content.
     *
     * @param aCharset name of the character encoding, e.g. 'iso-8859-15'.
     * @param aProp property desired for the character encoding.
     * @throws if aCharset is an unknown charset.
     * @return the value of the property, for the character encoding.
     */
    AString getCharsetData(in string aCharset,
                           in wstring aProp);

    /**
     * Get the language group for the given charset. This is similar to
     * calling <tt>getCharsetData</tt> with the <tt>prop</tt> "LangGroup".
     *
     * @param aCharset name of the character encoding, e.g. 'iso-8859-15'.
     * @throws if aCharset is an unknown charset.
     * @return the language code for the character encoding.
     */
    AUTF8String getCharsetLangGroup(in string aCharset);
    AUTF8String getCharsetLangGroupRaw(in string aCharset);

    /**
     * Decoding of UTF-7 in message headers and bodies.
     */
    AString utf7ToUnicode(in ACString aMutf7);

    /**
     * Support for Modified UTF-7 (MUTF-7) used by IMAP.
     */
    AString mutf7ToUnicode(in ACString aMutf7);
    ACString unicodeToMutf7(in AString aUnicode);
};
